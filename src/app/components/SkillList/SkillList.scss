@property --border-angle {
    syntax: '<angle>';
    inherits: false;
    initial-value: 0deg;
}

.skill-list {

    &__list {
        display: flex;
        flex-wrap: wrap;
        list-style: none;
        gap: 0.5rem;
    }

    &__item {
        border-radius: calc(infinity * 1px);
        position: relative;
        left: calc(100vw + 100px);
        transition: left 1s;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;

        @for $i from 1 through 30 {
            &:nth-child(#{$i}) {
                transition-delay: $i * 0.05s;
            }
        }

        &::before {
            content: "";
            display: block;
            position: absolute;
            inset: 0;
            --border-angle:0deg;
            transition:--border-angle 0.5s;
            background: conic-gradient(black var(--border-angle), transparent var(--border-angle) 360deg);

        }

        &:hover {
            &::before {
                --border-angle:360deg;
            }
        }

        &-inner {
            position: relative;
            z-index: 1;
            padding: 0.5rem 1rem;
            box-sizing: border-box;
            border-radius: calc(infinity *1px);
            margin: 2px;
            background: linear-gradient(
                65deg,
                rgba(255, 0, 0, 1) 0%,
                rgba(255, 154, 0, 1) 10%,
                rgba(208, 222, 33, 1) 20%,
                rgba(79, 220, 74, 1) 30%,
                rgba(63, 218, 216, 1) 40%,
                rgba(47, 201, 226, 1) 50%,
                rgba(28, 127, 238, 1) 60%,
                rgba(95, 21, 242, 1) 70%,
                rgba(186, 12, 248, 1) 80%,
                rgba(251, 7, 217, 1) 90%,
                rgba(255, 0, 0, 1) 100%
            );
            background-size: 200%;
            background-position: left;
            background-attachment: fixed;
        }
    }

    &.initialized {
        .skill-list__item {
            left: 0;
        }
    }
}